name: Build

on:
  push:
    branches: ['master', 'develop', '!trying', '!staging']
  pull_request:
    branches: ['master', 'develop']

jobs:

  build_and_test_cpu:
    runs-on: ubuntu-latest
    container: electronicstructure/sirius
    env:
      SPEC: sirius@develop %gcc +tests +apps +vdwxc +scalapack +fortran build_type=RelWithDebInfo ^openblas ^mpich
    steps:
      - uses: actions/checkout@v2
      - name: Show the spec
        run: spack --color always -e sirius-build-env spec -I $SPEC
      - name: Configure SIRIUS
        run: |
          cd ${GITHUB_WORKSPACE}
          mkdir build
          cd build
          spack --color always -e sirius-build-env build-env $SPEC -- cmake .. -DUSE_SCALAPACK=1 -DUSE_VDWXC=1 -DBUILD_TESTING=1 -DCREATE_FORTRAN_BINDINGS=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - name: Build SIRIUS
        run: |
          cd ${GITHUB_WORKSPACE}/build
          spack --color always -e sirius-build-env build-env $SPEC -- make
      - name: Run unit tests
        run: |
          cd ${GITHUB_WORKSPACE}/build
          spack --color always -e sirius-build-env build-env $SPEC -- ctest --output-on-failure --label-exclude integration_test
      - name: Run verification tests
        run: |
          cd ${GITHUB_WORKSPACE}/build
          spack --color always -e sirius-build-env build-env $SPEC -- ctest --output-on-failure -L cpu_serial

  build_elpa:
    runs-on: ubuntu-latest
    container: electronicstructure/sirius
    env:
      SPEC: sirius@develop %gcc +tests +apps +vdwxc +scalapack +elpa +fortran build_type=RelWithDebInfo ^openblas ^mpich
    steps:
      - uses: actions/checkout@v2
      - name: Show the spec
        run: spack --color always -e sirius-build-env spec -I $SPEC
      - name: Configure SIRIUS
        run: |
          cd ${GITHUB_WORKSPACE}
          mkdir build
          cd build
          spack --color always -e sirius-build-env build-env $SPEC -- cmake .. -DUSE_ELPA=1 -DUSE_SCALAPACK=1 -DUSE_VDWXC=1 -DBUILD_TESTING=1 -DCREATE_FORTRAN_BINDINGS=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - name: Build SIRIUS
        run: |
          cd ${GITHUB_WORKSPACE}/build
          spack --color always -e sirius-build-env build-env $SPEC -- make

  build_serial:
    runs-on: ubuntu-latest
    container: electronicstructure/sirius
    env:
      SPEC: sirius@develop %gcc +tests +apps +vdwxc +fortran build_type=RelWithDebInfo ^openblas ^mpich
    steps:
      - uses: actions/checkout@v2
      - name: Show the spec
        run: spack --color always -e sirius-build-env spec -I $SPEC
      - name: Configure SIRIUS
        run: |
          cd ${GITHUB_WORKSPACE}
          mkdir build
          cd build
          spack --color always -e sirius-build-env build-env $SPEC -- cmake .. -DUSE_VDWXC=1 -DBUILD_TESTING=1 -DCREATE_FORTRAN_BINDINGS=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - name: Build SIRIUS
        run: |
          cd ${GITHUB_WORKSPACE}/build
          spack --color always -e sirius-build-env build-env $SPEC -- make

  build_cuda:
    runs-on: ubuntu-latest
    container: electronicstructure/sirius
    env:
      SPEC: sirius@develop %gcc +tests +apps +vdwxc +scalapack +fortran +cuda cuda_arch=60 build_type=RelWithDebInfo ^openblas ^mpich
    steps:
      - uses: actions/checkout@v2
      - name: Show the spec
        run: spack --color always -e sirius-build-env spec -I $SPEC
      - name: Configure SIRIUS
        run: |
          cd ${GITHUB_WORKSPACE}
          mkdir build
          cd build
          spack --color always -e sirius-build-env build-env $SPEC -- cmake .. -DUSE_SCALAPACK=1 -DUSE_CUDA=1 -DUSE_VDWXC=1 -DBUILD_TESTING=1 -DCREATE_FORTRAN_BINDINGS=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - name: Build SIRIUS
        run: |
          cd ${GITHUB_WORKSPACE}/build
          spack --color always -e sirius-build-env build-env $SPEC -- make

  build_cuda_fp32:
    runs-on: ubuntu-latest
    container: electronicstructure/sirius
    env:
      SPEC: sirius@develop %gcc +tests +apps +vdwxc +scalapack +fortran +cuda cuda_arch=60 +single_precision build_type=RelWithDebInfo ^openblas ^mpich
    steps:
      - uses: actions/checkout@v2
      - name: Show the spec
        run: spack --color always -e sirius-build-env spec -I $SPEC
      - name: Configure SIRIUS
        run: |
          cd ${GITHUB_WORKSPACE}
          mkdir build
          cd build
          spack --color always -e sirius-build-env build-env $SPEC -- cmake .. -DUSE_SCALAPACK=1 -DUSE_CUDA=1 -DUSE_FP32=1 -DUSE_VDWXC=1 -DBUILD_TESTING=1 -DCREATE_FORTRAN_BINDINGS=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - name: Build SIRIUS
        run: |
          cd ${GITHUB_WORKSPACE}/build
          spack --color always -e sirius-build-env build-env $SPEC -- make

  build_nlcglib:
    runs-on: ubuntu-latest
    container: electronicstructure/sirius
    env:
      SPEC: sirius@develop %gcc +tests +apps +vdwxc +scalapack +fortran +cuda cuda_arch=60 +nlcglib build_type=RelWithDebInfo ^openblas ^mpich ^nlcglib +cuda +wrapper cuda_arch=60 ^kokkos +wrapper cuda_arch=60
    steps:
      - uses: actions/checkout@v2
      - name: Show the spec
        run: spack --color always -e sirius-build-env spec -I $SPEC
      - name: Configure SIRIUS
        run: |
          cd ${GITHUB_WORKSPACE}
          mkdir build
          cd build
          spack --color always -e sirius-build-env build-env $SPEC -- cmake .. -DUSE_NLCGLIB=1 -DUSE_SCALAPACK=1 -DUSE_CUDA=1 -DUSE_VDWXC=1 -DBUILD_TESTING=1 -DCREATE_FORTRAN_BINDINGS=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - name: Build SIRIUS
        run: |
          cd ${GITHUB_WORKSPACE}/build
          spack --color always -e sirius-build-env build-env $SPEC -- make

          #  build_rocm:
          #    runs-on: ubuntu-latest
          #    container: stabbles/sirius-rocm
          #    steps:
          #      - uses: actions/checkout@v2
          #      - name: Setup Spack
          #        run: |
          #          spack --color always repo rm --scope site user
          #          spack --color always repo add ${GITHUB_WORKSPACE}/spack
          #          spack --color always env create --without-view ci_run ${GITHUB_WORKSPACE}/ci/spack/rocm.yaml
          #          spack --color always -e ci_run develop --path ${GITHUB_WORKSPACE} sirius@develop
          #      - name: Show the spec
          #        run: spack --color always -e ci_run concretize
          #      - name: Build SIRIUS
          #        run: spack --color always -e ci_run install -v
          #
          #  build_cuda_10:
          #    runs-on: ubuntu-latest
          #    container: stabbles/sirius-cuda-10
          #    steps:
          #      - uses: actions/checkout@v2
          #      - name: Setup Spack
          #        run: |
          #          spack --color always repo rm --scope site user
          #          spack --color always repo add ${GITHUB_WORKSPACE}/spack
          #          spack --color always env create --without-view ci_run ${GITHUB_WORKSPACE}/ci/spack/cuda-10.yaml
          #          spack --color always -e ci_run develop --path ${GITHUB_WORKSPACE} sirius@develop
          #      - name: Show the spec
          #        run: spack --color always -e ci_run concretize
          #      - name: Build SIRIUS
          #        run: spack --color always -e ci_run install -v
          #
          #  build_cuda_11:
          #    runs-on: ubuntu-latest
          #    container: stabbles/sirius-cuda-11
          #    steps:
          #      - uses: actions/checkout@v2
          #      - name: Setup Spack
          #        run: |
          #          spack --color always repo rm --scope site user
          #          spack --color always repo add ${GITHUB_WORKSPACE}/spack
          #          spack --color always env create --without-view ci_run ${GITHUB_WORKSPACE}/ci/spack/cuda-11.yaml
          #          spack --color always -e ci_run develop --path ${GITHUB_WORKSPACE} sirius@develop
          #      - name: Show the spec
          #        run: spack --color always -e ci_run concretize
          #      - name: Build SIRIUS
          #        run: spack --color always -e ci_run install -v
          #
          #  build_elpa_mpich:
          #    runs-on: ubuntu-latest
          #    container: stabbles/sirius-cpu
          #    env:
          #      SPEC: sirius@develop %gcc +vdwxc +tests +apps +elpa build_type=RelWithDebInfo ^openblas ^mpich
          #    steps:
          #      - uses: actions/checkout@v2
          #      - name: Setup Spack
          #        run: |
          #          spack --color always repo rm --scope site user
          #          spack --color always repo add ${GITHUB_WORKSPACE}/spack
          #          spack --color always env create --without-view ci_run ${GITHUB_WORKSPACE}/ci/spack/cpu.yaml
          #      - name: Show the spec
          #        run: spack --color always -e ci_run spec -I $SPEC
          #      - name: Build SIRIUS
          #        run: spack --color always -e ci_run dev-build --source-path ${GITHUB_WORKSPACE} $SPEC
          #
          #  build_elpa_openmpi:
          #    runs-on: ubuntu-latest
          #    container: stabbles/sirius-cpu
          #    env:
          #      SPEC: sirius@develop %gcc +vdwxc +tests +apps +elpa build_type=RelWithDebInfo ^openblas ^openmpi
          #    steps:
          #      - uses: actions/checkout@v2
          #      - name: Setup Spack
          #        run: |
          #          spack --color always repo rm --scope site user
          #          spack --color always repo add ${GITHUB_WORKSPACE}/spack
          #          spack --color always env create --without-view ci_run ${GITHUB_WORKSPACE}/ci/spack/cpu.yaml
          #      - name: Show the spec
          #        run: spack --color always -e ci_run spec -I $SPEC
          #      - name: Build SIRIUS
          #        run: spack --color always -e ci_run dev-build --source-path ${GITHUB_WORKSPACE} $SPEC
          #
          #  build_basic_clang:
          #    runs-on: ubuntu-latest
          #    container: stabbles/sirius-cpu
          #    env:
          #      SPEC: sirius@develop %clang +tests +apps build_type=RelWithDebInfo ^openblas ^mpich ~fortran
          #    steps:
          #      - uses: actions/checkout@v2
          #      - name: Setup Spack
          #        run: |
          #          spack --color always repo rm --scope site user
          #          spack --color always repo add ${GITHUB_WORKSPACE}/spack
          #          spack --color always env create --without-view ci_run ${GITHUB_WORKSPACE}/ci/spack/cpu.yaml
          #      - name: Show the spec
          #        run: spack --color always -e ci_run spec -I $SPEC
          #      - name: Build SIRIUS
          #        run: spack --color always -e ci_run dev-build --source-path ${GITHUB_WORKSPACE} $SPEC
